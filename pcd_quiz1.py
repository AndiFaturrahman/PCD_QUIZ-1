# -*- coding: utf-8 -*-
"""PCD_QUIZ1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BpBo-KN3UJA492i9mDI_oiTIVcjoSURm
"""

import cv2

image = cv2.imread('/content/aang.png')

gray_image = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

cv2.imwrite('gambar_grayscale.jpg', gray_image)

import cv2

image = cv2.imread('/content/aang.png')

height, width, _ = image.shape

print("Lebar (Width):", width)
print("Tinggi (Height):", height)

import cv2

image = cv2.imread('/content/aang.png', cv2.IMREAD_GRAYSCALE)

min_val, max_val, min_loc, max_loc = cv2.minMaxLoc(image)

print("Nilai Minimum Pixel:", min_val)
print("Nilai Maksimum Pixel:", max_val)

import cv2

image = cv2.imread('/content/aang.png', cv2.IMREAD_GRAYSCALE)

normalized_image = image / 255.0

print("Nilai Pixel Setelah Normalisasi:")
print(normalized_image)

import cv2

image = cv2.imread('/content/aang.png')

flipped_horizontal = cv2.flip(image, 1)

cv2.imwrite('gambar_flip_horizontal.jpg', flipped_horizontal)

flipped_vertical = cv2.flip(image, 0)

cv2.imwrite('gambar_flip_vertical.jpg', flipped_vertical)

import cv2
import numpy as np

image = cv2.imread('/content/aang.png')

mean = 0
std_dev = 25
gaussian_noise = np.random.normal(mean, std_dev, image.shape).astype(np.uint8)
noisy_image_gaussian = cv2.add(image, gaussian_noise)

salt_pepper_noise = np.zeros(image.shape, np.uint8)
noise_level = 0.05
salt_pepper_pixels = np.random.rand(*image.shape[:2])
salt_pepper_noise[salt_pepper_pixels < noise_level / 2] = 255
salt_pepper_noise[salt_pepper_pixels > 1 - noise_level / 2] = 0
noisy_image_salt_pepper = cv2.add(image, salt_pepper_noise)

cv2.imwrite('gambar_noise_gaussian.jpg', noisy_image_gaussian)
cv2.imwrite('gambar_noise_salt_pepper.jpg', noisy_image_salt_pepper)

import cv2
import numpy as np

image = cv2.imread('/content/aang.png')

random_x = np.random.randint(0, image.shape[1] - 250)
random_y = np.random.randint(0, image.shape[0] - 250)
random_cropped_image = image[random_y:random_y+250, random_x:random_x+250]

center_x = (image.shape[1] - 250) // 2
center_y = (image.shape[0] - 250) // 2
center_cropped_image = image[center_y:center_y+250, center_x:center_x+250]

cv2.imwrite('gambar_random_crop.jpg', random_cropped_image)
cv2.imwrite('gambar_center_crop.jpg', center_cropped_image)